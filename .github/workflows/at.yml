name: Train AI on New Data

on:
  push:
    paths:
      - 'Training_Data/**'
  workflow_dispatch:

jobs:
  validate-train:
    name: Validate and Train AI via Kaggle
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Dependencies
        run: |
          pip install -r requirements.txt
          pip install kaggle huggingface-hub

      - name: Download and Prepare Stock Data
        run: |
          python download_and_prepare_stock_data.py

      - name: Format for ALBERT
        run: |
          python format_for_albert.py --folder Training_Data

      - name: Validate and Prepare Data
        run: |
          python validate_and_prepare.py

      - name: Optimize Data for AI Model
        run: |
          python optimize_data.py --input Training_Data/validated_data.csv --output Training_Data/optimized_data.csv

      - name: Set up Kaggle CLI
        env:
          KAGGLE_USERNAME: ${{ secrets.KAGGLE_USERNAME }}
          KAGGLE_KEY: ${{ secrets.KAGGLE_KEY }}
        run: |
          mkdir -p ~/.kaggle
          echo "{\"username\":\"$KAGGLE_USERNAME\",\"key\":\"$KAGGLE_KEY\"}" > ~/.kaggle/kaggle.json
          chmod 600 ~/.kaggle/kaggle.json

      - name: Create Kaggle Dataset
        run: |
          mkdir -p kaggle_dataset
          cp Training_Data/optimized_data.csv kaggle_dataset/
          export KAGGLE_TIMESTAMP=$(date +%s)
          echo "{\"title\":\"stockai-data-$KAGGLE_TIMESTAMP\",\"id\":\"ryanmanzo/stockai-data-$KAGGLE_TIMESTAMP\",\"licenses\":[{\"name\":\"CC0-1.0\"}]}" > kaggle_dataset/dataset-metadata.json
          kaggle datasets create -p kaggle_dataset --dir-mode zip

      - name: Push Kernel to Kaggle
        run: |
          mkdir -p kaggle_kernel
          cp train_model.py kaggle_kernel/
          export KAGGLE_TIMESTAMP=$(date +%s)
          echo "{
            \"id\": \"ryanmanzo/stockai-kernel-$KAGGLE_TIMESTAMP\",
            \"title\": \"stockai-kernel-$KAGGLE_TIMESTAMP\",
            \"code_file\": \"train_model.py\",
            \"language\": \"python\",
            \"kernel_type\": \"notebook\",
            \"is_private\": true,
            \"enable_gpu\": true,
            \"dataset_sources\": [\"ryanmanzo/stockai-data-$KAGGLE_TIMESTAMP\"]
          }" > kaggle_kernel/kernel-metadata.json
          kaggle kernels push -p kaggle_kernel

      - name: Wait for Kernel Execution
        run: |
          echo "Sleeping 10 minutes to allow training to complete"
          sleep 600

      - name: Download Trained Model from Kaggle
        run: |
          kaggle kernels output ryanmanzo/stockai-kernel -p trained_model
          ls -la trained_model

      - name: Upload model weights to Hugging Face
        env:
          HF_TOKEN: ${{ secrets.HF_TOKEN }}
        run: |
          huggingface-cli login --token $HF_TOKEN
          huggingface-cli upload rmanzo28/Stockai trained_model/model_weights.pth
